@model WebServicesFigaro.Models.Reservado

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Reservado</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.Hora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hora, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="demo-section k-content">
          <h4>Start time</h4>
          @(Html.Kendo().TimePicker()
          .Name("start")
          .Value("8:00 AM")
          .Min("8:00 AM")
          .Max("6:00 PM")
          .Events(e => e.Change("startChange"))
          .HtmlAttributes(new { style = "width: 100%" })
          )

          <h4 style="margin-top: 2em;">End time</h4>
          @(Html.Kendo().TimePicker()
          .Name("end")
          .Value("8:30 AM")
          .Min("8:00 AM")
          .Max("7:30 AM")
          .HtmlAttributes(new { style = "width: 100%" })
          )
        </div>
        <script>
        function startChange() {
            var startTime = this.value(),
                endPicker = $("#end").data("kendoTimePicker");

            if (startTime) {
                startTime = new Date(startTime);

                endPicker.max(startTime);

                startTime.setMinutes(startTime.getMinutes() + this.options.interval);

                endPicker.min(startTime);
                endPicker.value(startTime);
            }
        }
        </script>*@

        <div class="form-group">
            @Html.LabelFor(model => model.DisponibilidadId, "DisponibilidadId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DisponibilidadId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DisponibilidadId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.PedidoId, "PedidoId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PedidoId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PedidoId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
